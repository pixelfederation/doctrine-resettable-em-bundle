name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  pull-requests: write
  issues: write
  repository-projects: write
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '8.2' ]
        symfony-version: [ '6.3.*', '7.0.*' ]
        symfony-deprecations-helper: [ 'max[direct]=0&baselineFile=./tests/allowed.json' ]
        grumphp-testsuite: [ 'no-analyse' ]
        grumphp-flag: [ '-no-analyse' ]

    name: "PHP: ${{ matrix.php-version }}, Symfony: ${{ matrix.symfony-version }}, GrumPHP: ${{ matrix.grumphp-testsuite }}, Composer: ${{ matrix.composer-flag }}"

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Check PHP Version
        run: php -v

      - name: Symfony version # run every time except for dependencies with SF 5.4 (locked in composer)
        if: ${{ matrix.grumphp-testsuite == 'no-analyse' }}
        run: composer config extra.symfony.require ${{ matrix.symfony-version }}

      - name: Composer update # run for everything except php 8.1 or SF 5.4 locked in composer.lock
        if: ${{ matrix.grumphp-testsuite == 'no-analyse' }}
        run: composer update ${{ matrix.composer-flag }} --prefer-dist --no-interaction

      - name: Composer install # only run for locked dependencies with php 8.1 or SF 5.4 (locked in composer)
        if: ${{ matrix.grumphp-testsuite == 'main' }}
        run: composer install --prefer-dist --no-interaction

      - name: Run static analysis (GrumPHP)
        run: composer run-script grumphp${{ matrix.php-version }}${{ matrix.grumphp-flag }}

#      - name: Check vendor licenses
#        run: composer run-script lic-check

  dependabot:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Approve a dependabot PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

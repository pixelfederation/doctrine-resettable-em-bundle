services:
  _defaults:
    public: false
    autowire: false
    autoconfigure: false

  PixelFederation\DoctrineResettableEmBundle\Connection\ConnectionsHandler:
    arguments:
      $aliveKeepers: ~ # will be added by the compiler pass if needed

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\DBALPlatformAliveKeeper:
    arguments:
      $connections: ~ # will be added by the compiler pass if needed
      $aliveKeepers: ~ # will be added by the compiler pass if needed

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\OptimizedDBALAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be added by the compiler pass if needed

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\PingingDBALAliveKeeper:

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\TransactionDiscardingDBALAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be provided by compiler pass
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: doctrine-resettable-em-bundle }

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\PassiveIgnoringDBALAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be provided by compiler pass

  PixelFederation\DoctrineResettableEmBundle\Redis\Cluster\Connection\RedisClusterPlatformAliveKeeper:
    arguments:
      $connections: ~ # will be provided by compiler pass
      $aliveKeepers: ~ # will be provided by compiler pass

  PixelFederation\DoctrineResettableEmBundle\Redis\Cluster\Connection\PingingRedisClusterAliveKeeper:
    abstract: true
    arguments:
      $constructorArguments: ~ # will be provided by compiler pass
      $logger: '@logger' # will be provided by compiler pass
    tags:
      - { name: monolog.logger, channel: doctrine-resettable-em-bundle }

  PixelFederation\DoctrineResettableEmBundle\Redis\Cluster\Connection\PassiveIgnoringRedisClusterAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be provided by compiler pass

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\FailoverAware\FailoverAwareDBALAliveKeeper:
    abstract: true
    arguments:
      $logger: '@logger'
      $connectionType: ~ # will be provided by compiler pass
    tags:
      - { name: monolog.logger, channel: doctrine-resettable-em-bundle }

  PixelFederation\DoctrineResettableEmBundle\Redis\Cluster\Connection\OptimizedRedisClusterAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be added by the compiler pass if needed

  PixelFederation\DoctrineResettableEmBundle\RequestCycle\Initializers:
    arguments: [!tagged 'pixelfederation_doctrine_resettable_em_bundle.app_initializer']
    tags:
      - {name: kernel.event_listener, event: kernel.request, method: initialize, priority: 1000000}

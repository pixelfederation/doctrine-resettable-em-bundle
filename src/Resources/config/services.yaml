services:
  _defaults:
    public: false
    autowire: false
    autoconfigure: false

  PixelFederation\DoctrineResettableEmBundle\Connection\AliveKeeper\AliveKeeper: '@PixelFederation\DoctrineResettableEmBundle\Connection\AliveKeeper\AggregatedAliveKeeper'

  PixelFederation\DoctrineResettableEmBundle\Connection\ConnectionsHandler:
    arguments:
      $aliveKeeper: '@PixelFederation\DoctrineResettableEmBundle\Connection\AliveKeeper\AliveKeeper'
    tags:
      - {name: pixelfederation_doctrine_resettable_em_bundle.app_initializer}

  PixelFederation\DoctrineResettableEmBundle\Connection\AliveKeeper\AggregatedAliveKeeper:
    arguments:
      $aliveKeepers: [] # will be provided by compiler pass

  PixelFederation\DoctrineResettableEmBundle\Connection\AliveKeeper\OptimizedAliveKeeper:
    abstract: true
    arguments:
      $decorated: '@PixelFederation\DoctrineResettableEmBundle\Connection\AliveKeeper\AggregatedAliveKeeper'

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\DBALAliveKeeper:
    abstract: true
    arguments:
      $connection: ~ # will be provided by compiler pass

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\TransactionDiscardingDBALAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be provided by compiler pass
      $connection: ~ # will be provided by compiler pass
      $connectionName: ~ # will be provided by compiler pass
      $logger: '@logger'
    tags:
      - { name: monolog.logger, channel: doctrine-resettable-em-bundle }

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\PassiveIgnoringDBALAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be provided by compiler pass
      $connection: ~ # will be provided by compiler pass

  PixelFederation\DoctrineResettableEmBundle\Redis\Cluster\Connection\RedisClusterAliveKeeper:
    abstract: true
    arguments:
      $connectionName: ~ # will be provided by compiler pass
      $redis: ~ # will be provided by compiler pass
      $constructorArguments: ~ # will be provided by compiler pass
      $logger: '@logger' # will be provided by compiler pass
    tags:
      - { name: monolog.logger, channel: doctrine-resettable-em-bundle }

  PixelFederation\DoctrineResettableEmBundle\Redis\Cluster\Connection\PassiveIgnoringRedisClusterAliveKeeper:
    abstract: true
    arguments:
      $decorated: ~ # will be provided by compiler pass
      $redis: ~ # will be provided by compiler pass

  PixelFederation\DoctrineResettableEmBundle\DBAL\Connection\FailoverAware\FailoverAwareAliveKeeper:
    abstract: true
    arguments:
      $logger: '@logger'
      $connection: ~ # will be provided by compiler pass
      $connectionName: ~ # will be provided by compiler pass
    tags:
      - { name: monolog.logger, channel: doctrine-resettable-em-bundle }

  PixelFederation\DoctrineResettableEmBundle\RequestCycle\Initializers:
    arguments: [!tagged 'pixelfederation_doctrine_resettable_em_bundle.app_initializer']
    tags:
      - {name: kernel.event_listener, event: kernel.request, method: initialize, priority: 1000000}
